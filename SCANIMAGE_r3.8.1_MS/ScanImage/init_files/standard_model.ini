%%%%%%%%About the standard_model.INI File%%%%%%%%%%%%%%%%%%%%%%
% User is expected to copy this file to a desired location, e.g. c:\data\config\scanimage
% Location should typically be the same as where one or more USR files are stored
% File should typically be renamed to standard.INI
% Values should then be edited to those appropriate for the ScanImage installation ('rig')
%
% NOTE: All values with example/default value of empty ([],'') can be left as such --
%       depending on context, this will either leave capability disabled or will cause default value to be used.
% NOTE: No space is allowed on either side of equal sign, i.e. each line should be: <varName>=<value>

structure state
	structure init
        % acquisitionBoardID and mirrorOutputBoardID must, at present, be the same
        % They must represent the device name of a National Instruments S-Series Board (e.g. NI PCI 6110) 		
        acquisitionBoardID='Dev1'             % Name of DAQ board for use with PMT acquisition
        mirrorOutputBoardID='Dev4'            % Name of DAQ board for use with galvo mirror output

        % The Analog Output (AO) channels, on board specified by mirrorOutputBoardID, connected to the X and Y mirror command inputs
        % Commercial mirror pairs typically identify the two mirrors as X & Y, with the former typically corresponding to the faster and/or first mirror in the pair
        XMirrorChannelID=0			
        YMirrorChannelID=1	

        % Scan angular range, specified in optical degrees
        scanAngularRangeReferenceFast=15;
        scanAngularRangeReferenceSlow=15;

        % Multiplier, specified in /volts per optical degree/, to convert ScanImage values specified in optical degrees 
        % (e.g. Scan Offset X/Y, Park Amplitude X/Y, Scan Angular Range Fast/Slow, Scan Shift Fast/Slow)
        % to scanner command signal units (volts). Value should be determined from scanner manufacturer documentation/datasheet.
        % For mechanical scanners (galvanometers), note that 'optical' degrees are twice 'mechanical' degrees due to reflection --  
        % i.e. the scanned beam angular range is /twice/ the physical scanner rotation.  For example, Cambridge Technology specifies 
        % a 'command input scale factor' value as 'volts per mechanical degree' -- this is /twice/ the value to be entered here.
        % IMPORTANT: Cambridge Technology often configures system with different command input scale factor than in their datasheet
        % The actual value is specified in the quotation they provide with new systems. 
        % Their standard 6210/6215 3 and 6 mm mirror systems are generally configured as 0.667 and 1 V/mechanical degree,
        % leading to values of 0.333 and 0.5 V/optical degree to be entered here, respectively.
        voltsPerOpticalDegree=0.333  Config 2  

        % By default, with allowFasterLineScans=0, line scan periods down to 0.5ms/line are supported
        % If allowFasterLineScans=1, line scan periods down to 0.125ms/line are made available -- in the Ms/Line (nominal) dropdown menu
        % WARNING: Such line speeds are likely only possible with acousto-optic deflectors or, maybe, with galvos when opearting at high scanZoomFactor.
        %          Enable the allowFasterLineScans option with full caution, with respect to scanner capabilities and health         
        allowFasterLineScans=0

        %The ScanImage start trigger source and destination must be specified 
        %These pertain during FOCUS (always) and GRAB/LOOP (when EXT triggering is disabled)
        %The source is specified by triggerBoardID/triggerLineID -- this is a single digital output (DO) line, on one board, on which ScanImage generates a trigger pulse to start acquisitions
        %The destination is the PFI terminal on which /all/ ScanImage boards are connected to the specified source       
        triggerBoardID='Dev1'                 % Name of DAQ board on which ScanImage start trigger source is generated. Typically the same as acquisitionBoardID.
        triggerLineID=0                       % ID of DO line (assumed to be on port0) which serves as the ScanImage start trigger source.
        triggerInputTerminal='PFI6'           % Terminal on which /all/ ScanImage boards receive input trigger from DO line specified by triggerBoardID/triggerLineID.

        %The 'Next' triggering feature requires the uses of ONE Counter/Timer channel on ONE of the installed boards (regardless of number of 'nextTrigTerminals' below)
        %NOTE: The Board/CtrID specified for next trigger (if any) and each of the clock export signals (if any) must be mutually exclusive
        %NOTE: Board specified by 'triggerBoardID' reserves Ctr0 (CtrID = 0). This cannot be used for next trigger.
        nextTrigBoardID=''                    % Name of DAQ board on which next triggers are processed, e.g. 'Dev1'.
        nextTrigCtrID=[]                      % Counter input channel (e.g. 1 for Ctr1) used by board specified by 'nextTrigBoardID'. Note that 'nextTrigBoardID'/'nextTrigCtrID' combination, if specified, cannot be used for any of the clock export signals.

        %Clock Export Signals
        %NOTE: Board/CtrID specified for next trigger (if any) and each of the clock export signals (if any) must be mutually exclusive
        %NOTE: Board specified by 'triggerBoardID' reserves Ctr0 (CtrID = 0). This cannot be used for any of the clock export signals.
        frameClockBoardID='Dev4'                  % Name of DAQ board from which frame clock sould be exported, e.g. 'Dev2'
        frameClockCtrID=0                    % Counter output channel (e.g. 1 for Ctr1) on which frame clock should be exported, on board specified by frameClockBoardID
        lineClockBoardID='Dev4'                   % Name of DAQ board from which line clock sould be exported, e.g. 'Dev2'
        lineClockCtrID=1                     % Counter output channel (e.g. 1 for Ctr1) on which line clock should be exported, on board specified by lineClockBoardID
        pixelClockBoardID='Dev4'                  % Name of DAQ board from which pixel clock sould be exported, e.g. 'Dev2'
        pixelClockCtrID=2                    % Counter output channel (e.g. 1 for Ctr1) on which pixel clock should be exported, on board specified by pixelClockBoardID     
       
        %parkAngleX/Y specify scanner angular position, in optical degrees, when scanning is inactive. 
        %NOTE: When beam is parked, shutter is closed and Pockels level is at minimum.
        %WARNING: A too-large value can lead beam (even though it should be attenuated/blocked) to leave the microscope's optical train.
        parkAngleX=7.5          % Angular position of X scanner, in optical degrees, when beam is 'parked' (i.e. when scanning is inactive)
        parkAngleY=7.5          % " (Y scanner) "
        parkAngleAllowInvert=1  % Flag (1 = yes, 0=no) specifying to interpret parkAngleX/Y as absolute values; in this case, sign is chosen to park beam on side of start of upcoming scan to minimize scanner transient.

        %scanOffsetAngleX/Y specify the 'center' of the laser scan pattern, in optical degrees. 
        %This adjusts the angle of the scanned laser beam relative to optical axis of microscope/objective.
        %This effectively adjusts the lateral centering of the scanned field-of-view.
        %Note that scanOffsetAngleX/Y (unlike other variables in this file) can be modified interactively /during/ ScanImage operation.
        %Use the Align... dialog for this purpose.
        scanOffsetAngleX=0.00        Config 2 Gui gh.alignGUI.etScanOffsetX Numeric 1  
        scanOffsetAngleY=0.00        Config 2 Gui gh.alignGUI.etScanOffsetY Numeric 1  
   
        %%%Optional Device Configurations%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        % Pockels Cell configuration
        structure eom        
            pockelsOn=1  % Flag to determine whether Pockels  Cell is being used: 1 = yes, 0 = no
            etlOn=1; %MISHA - Specify whether ETL is on
            % Modulator Specifics. Each of up to 3 EOMs (Pockels Cells) must have several variables specified to be enabled.
            % Variables for each Pockels Cell follow format <variableName>N, where N is a number in the range 1-3.
            % By convention, any Pockels Cell with an empty BoardID/ChannelIndex is disabled.  To enable a Pockels Cell, a
            % valid acquisition device ID (e.g. 'Dev2') and channel index (e.g. 1) must be specified.
            %
            % NOTE: If photodiodeInputBoardIDN value is left empty (default), the Pockels Cell will be uncalibrated (a naive linear calibration between 0 and pockelsVoltageRangeN will be presumed). 
            % A valid acquisition device ID (e.g. 'Dev1') must be provided for photodiode calibration to be used. 
            %
            beamName1='Beam 1'                  % Descriptive name for beam (e.g. type of laser)
            pockelsBoardID1='Dev2'                  % Name of output DAQ board for use with scan laser pockels cell
            pockelsChannelIndex1=0             % Index of output DAQ channel for use to drive scan laser pockels cell.
            pockelsVoltageRange1=1.5            % Pockels cell control voltage ranges from 0 to this value
            photodiodeInputBoardID1='Dev4'          % Name of Input DAQ board where photocurrent is input, e.g. 'Dev2' If empty, this beam will be left uncalibrated.
            photodiodeInputChannel1=0          % Channel index on input DAQ board where photocurrent is input.           
            photodiodeInputNegative1=0          % Photodiode voltage signal is negative/positive. 0=positive 1=negative
            powerConversion1=10     Config 2    % Conversion factor: <powerConversion> * <photodiodeVoltage> = <powerInMilliWatts>.
            rejected_light1=0       Config 2    % The calibration input comes from accepted/rejected light. 0==accepted 1==rejected
            maxPower1=10                        % The startup values can be set here...
            maxLimit1=100                       % Same as above.
            photodiodeOffset1=0     Config 2    % The 'rest' voltage from the photodiode for this beam (this covers amplifier offset, ambient light, etc).

            % Specify a valid BoardID/ChannelIndex to add a second Pockels Cell (and photodiode, if present)
            beamName2='Beam 2'                 % Descriptive name for beam (e.g. type of laser)
            pockelsBoardID2='Dev2'                 % Name of output DAQ board for use with scan laser pockels cell
            pockelsChannelIndex2=1            % Index of output DAQ channel for use to drive scan laser pockels cell.
            pockelsVoltageRange2=1.5           % Pockels cell control voltage ranges from 0 to this value
            photodiodeInputBoardID2='Dev4'         % Name of input DAQ board where photocurrent is input, e.g. 'Dev2'. If empty, this beam will be left uncalibrated.
            photodiodeInputChannel2=1         % Channel index on input DAQ board where photocurrent is input.           
            photodiodeInputNegative2=0         % Photodiode voltage signal is negative/positive. 0=positive 1=negative
            powerConversion2=10    Config 2    % Conversion factor: <powerConversion> * <photodiodeVoltage> = <powerInMilliWatts>.
            rejected_light2=0      Config 2    % The calibration input comes from accepted/rejected light. 0==accepted 1==rejected
            maxPower2=10                       % The startup values can be set here...
            maxLimit2=100                      % Same as above.
            photodiodeOffset2=0    Config 2    % The 'rest' voltage from the photodiode for beam 1 (this covers amplifier offset, ambient light, etc).     
	        
            % Specify a valid BoardID/ChannelIndex to add a third Pockels Cell (and photodiode, if present)
            beamName3='Beam 3'                 % Descriptive name for beam (e.g. type of laser)
            pockelsBoardID3='Dev2'                 % Name of output DAQ board for use with scan laser pockels cell
            pockelsChannelIndex3=2            % Index of output DAQ channel for use to drive scan laser pockels cell.
            pockelsVoltageRange3=1.5           % Pockels cell control voltage ranges from 0 to this value
            photodiodeInputBoardID3='Dev4'         % Name of input DAQ board where photocurrent is input, e.g. 'Dev2'. If empty, this beam will be left uncalibrated.
            photodiodeInputChannel3=2         % Channel index on input DAQ board where photocurrent is input.           
            photodiodeInputNegative3=0         % Photodiode voltage signal is negative/positive. 0=positive 1=negative
            powerConversion3=10    Config 2    % Conversion factor: <powerConversion> * <photodiodeVoltage> = <powerInMilliWatts>.
            rejected_light3=0      Config 2    % The calibration input comes from accepted/rejected light. 0==accepted 1==rejected
            maxPower3=10                       % The startup values can be set here...
            maxLimit3=100                      % Same as above.
            photodiodeOffset3=0    Config 2    % The 'rest' voltage from the photodiode for this beam (this covers amplifier offset, ambient light, etc).           	        
	   endstructure
	endstructure
	
    %Shutter configuration.
	structure shutter
        shutterOn=1                 % Flag (1 = yes, 0=no) to determine whether shutter is being used
        shutterBoardID='Dev1'           % Name of DAQ board on which the static DIO lines for the shutter(s) will be employed 
        shutterLineIndex=1         % Line index for laser shutter line (assumed to be on Port 0)
        open=0                      % Boolean value indicating TTL level used for open state of laser shutter (0=TTL LO, 1=TTL HI)
        shutterOpenTime=0           % Time, in us, to allow for shutter opening time where needed/appropriate
        
        % shutterBeforeEOM specifies location of shutter relative to (optional) EOM (Pockels)
        % Set 1 (true) if shutter is located before EOM (Pockels); 0 (false) if located after        
        % WARNING: If shutter is located before EOM (Pockels), then light reaches scope - and possibly specimen! - during calibration
        shutterBeforeEOM=0   % Boolean indicating whether to open shutter during EOM (Pockels) calibration. 
    endstructure
	
    % Stage and Z-Focus controls using a Linear Stage Controller
    % NOTE: Empty values in this section, e.g. 'baud', can be left as empty -- 
    %       default values (appropriate for specified controllerType/stageType) will then be used
    structure motor   
        motorOn=1           % Flag (1 = yes, 0=no) to determine whether motor device(s) is/are being used by any user on this rig/system
     
        %Specify primary motor controller device, if any
        controllerType='sutter.mp285'   % One of {'sutter.mp285', 'sutter.mpc200', 'scientifica', 'pi.e816', 'pi.e517', 'pi.e753'}. Can use 'dummy' for simulated stage operation.
        stageType=''        % Identify valid stage type for given controller, if needed. At this time, only required if controllerType='scientifica'.
        dimensions='XYZ'    % One of {'XYZ','XY','Z'}. If empty, 'XYZ' is assumed. Identifies dimensions controlled by primary controller. 

        %Specify connection settings to primary motor controller device
        port='COM1'             % Serial port for motor device communication, e.g. 'COM2'
        baud=9600             % Baud rate for serial communication with motor device. Leave empty to use default value for given controller type, or set to override this default. 
        timeout=5           % Time, in seconds, to wait for moves to complete, before generating an error. This should be set longer than the longest expected move time. 

        %Specify, in microns, the finest step size supported by controllerType & stageType combination, in each dimension
        %If left empty, default values for controllerType & stageType combination will be used.
        %IMPORTANT: If one value is set, ALL must be set.
        resolutionX=0.04     
        resolutionY=0.04
        resolutionZ=0.005     

        zDepthPositive=1    % Logical value indicating when true (false), that increasing values of z-axis position correspond to increasing (decreasing) depth in specimen.

        stepDelay=0.1   % Time, in seconds, to delay following stack/cycle motor steps (nominally completed, according to controller) to ensure motor has 'settled' prior to following acquisition

        %Following values should typically only be modified if using a custom stage for a given controller, i.e. so that default velocity settings do not apply. 
        velocityFast=[]     % Velocity used for most of large moves, before slowing down for final 100um. See documentation for units/scale definition. If empty, default for given 'controllerType' will be used.
        velocitySlow=[]     % Velocity used for movements < 100um (e.g. stack steps) and at end of large moves for fine control. See documentation for units/scale definition. If empty, default for given 'controllerType' will be used.

        %Specify & configure a secondary controller device, for Z dimension, if any
        %The primary controller must be configured, with dimensions member of {'XY','XYZ'}
        %Configuring secondary controller creates XY-Z or XYZ-Z configuration
        controllerTypeZ=''          
        stageTypeZ=''
        
        portZ=''
        baudZ=''
        timeoutZ=5
        resolutionZZ=[]
        zDepthPositiveZ=1    
        
        velocityFastZ=[];
        velocitySlowZ=[];
        
    endstructure

endstructure
